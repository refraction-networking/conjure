name: rust

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # ubuntu-latest is another name for ubuntu-22.04
          - { rust: stable,           os: ubuntu-20.04 }
          - { rust: stable,           os: ubuntu-22.04 }
          - { rust: nightly,          os: ubuntu-latest }
    steps:
      - uses: actions/checkout@v3

      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get install protobuf-compiler software-properties-common -y -q
          sudo apt-get install libzmq3-dev libssl-dev pkg-config libgmp3-dev -y -q

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - run: cargo test --verbose --workspace
      # - run: cargo test --verbose --workspace --all-features
      # - run: cargo test --verbose --workspace --no-default-features

  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3
      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get install protobuf-compiler software-properties-common -y -q
          sudo apt-get install libzmq3-dev libssl-dev pkg-config libgmp3-dev -y -q
      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - run: cargo clippy --workspace --all-targets --verbose
      # - run: cargo clippy --workspace --all-targets --verbose --no-default-features
      # - run: cargo clippy --workspace --all-targets --verbose --all-features

  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
